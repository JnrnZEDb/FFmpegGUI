#############################################################################
# Makefile for building: src
# Generated by qmake (2.01a) (Qt 4.6.2) on: po 5 15 20:43:38 2017
# Project:  src.pro
# Template: app
# Command: /usr/local/bin/qmake -unix -o Makefile src.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB
CFLAGS        = -m64 -pipe -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fstack-protector --param=ssp-buffer-size=4 -m64 -mtune=generic -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -m64 -pipe -fpermissive -std=c++0x -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fstack-protector --param=ssp-buffer-size=4 -m64 -mtune=generic -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/lib64/qt4/mkspecs/linux-g++-64 -I. -I/usr/include/QtCore -I/usr/include/QtGui -I/usr/include -I. -I. -I.
LINK          = g++
LFLAGS        = -m64 -Wl,-O1
LIBS          = $(SUBLIBS)   -L(system(ldconfig\ -p\ |\ grep\ libavformat\ |\ grep\ -o\ -P\ (?<==>).*(?=/libavformat) | sed -n 1p)) -lavdevice -lavformat -lavfilter -lavcodec -lswscale -lavutil -lswresample -lbz2 -lm -lz -ldl -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/local/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = 
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = connectivity.cpp \
		externs.cpp \
		filter.cpp \
		filterButton.cpp \
		filtersList.cpp \
		filtersWidget.cpp \
		inspectionWidget.cpp.cc \
		main.cpp \
		mainwindow.cpp \
		pad.cpp \
		pipeline.cpp \
		pipelineParser.cpp \
		pipelineSaver.cpp \
		player.cpp \
		scene.cpp \
		view.cpp \
		wire.cpp moc_filtersList.cpp \
		moc_filtersWidget.cpp \
		moc_inspectionWidget.cpp \
		moc_mainwindow.cpp \
		moc_pipeline.cpp \
		moc_player.cpp \
		moc_view.cpp \
		moc_wire.cpp
OBJECTS       = connectivity.o \
		externs.o \
		filter.o \
		filterButton.o \
		filtersList.o \
		filtersWidget.o \
		inspectionWidget.cpp.o \
		main.o \
		mainwindow.o \
		pad.o \
		pipeline.o \
		pipelineParser.o \
		pipelineSaver.o \
		player.o \
		scene.o \
		view.o \
		wire.o \
		moc_filtersList.o \
		moc_filtersWidget.o \
		moc_inspectionWidget.o \
		moc_mainwindow.o \
		moc_pipeline.o \
		moc_player.o \
		moc_view.o \
		moc_wire.o
DIST          = /usr/lib64/qt4/mkspecs/common/g++-multilib.conf \
		/usr/lib64/qt4/mkspecs/common/unix.conf \
		/usr/lib64/qt4/mkspecs/common/linux.conf \
		/usr/lib64/qt4/mkspecs/qconfig.pri \
		/usr/lib64/qt4/mkspecs/features/qt_functions.prf \
		/usr/lib64/qt4/mkspecs/features/qt_config.prf \
		/usr/lib64/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/lib64/qt4/mkspecs/features/default_pre.prf \
		/usr/lib64/qt4/mkspecs/features/release.prf \
		/usr/lib64/qt4/mkspecs/features/default_post.prf \
		/usr/lib64/qt4/mkspecs/features/warn_on.prf \
		/usr/lib64/qt4/mkspecs/features/qt.prf \
		/usr/lib64/qt4/mkspecs/features/unix/thread.prf \
		/usr/lib64/qt4/mkspecs/features/moc.prf \
		/usr/lib64/qt4/mkspecs/features/resources.prf \
		/usr/lib64/qt4/mkspecs/features/uic.prf \
		/usr/lib64/qt4/mkspecs/features/yacc.prf \
		/usr/lib64/qt4/mkspecs/features/lex.prf \
		/usr/lib64/qt4/mkspecs/features/include_source_dir.prf \
		src.pro
QMAKE_TARGET  = src
DESTDIR       = 
TARGET        = src

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_filtersList.h ui_filtersWidget.h ui_inspectionWidget.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: src.pro  /usr/lib64/qt4/mkspecs/linux-g++-64/qmake.conf /usr/lib64/qt4/mkspecs/common/g++-multilib.conf \
		/usr/lib64/qt4/mkspecs/common/unix.conf \
		/usr/lib64/qt4/mkspecs/common/linux.conf \
		/usr/lib64/qt4/mkspecs/qconfig.pri \
		/usr/lib64/qt4/mkspecs/features/qt_functions.prf \
		/usr/lib64/qt4/mkspecs/features/qt_config.prf \
		/usr/lib64/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/lib64/qt4/mkspecs/features/default_pre.prf \
		/usr/lib64/qt4/mkspecs/features/release.prf \
		/usr/lib64/qt4/mkspecs/features/default_post.prf \
		/usr/lib64/qt4/mkspecs/features/warn_on.prf \
		/usr/lib64/qt4/mkspecs/features/qt.prf \
		/usr/lib64/qt4/mkspecs/features/unix/thread.prf \
		/usr/lib64/qt4/mkspecs/features/moc.prf \
		/usr/lib64/qt4/mkspecs/features/resources.prf \
		/usr/lib64/qt4/mkspecs/features/uic.prf \
		/usr/lib64/qt4/mkspecs/features/yacc.prf \
		/usr/lib64/qt4/mkspecs/features/lex.prf \
		/usr/lib64/qt4/mkspecs/features/include_source_dir.prf
	$(QMAKE) -unix -o Makefile src.pro
/usr/lib64/qt4/mkspecs/common/g++-multilib.conf:
/usr/lib64/qt4/mkspecs/common/unix.conf:
/usr/lib64/qt4/mkspecs/common/linux.conf:
/usr/lib64/qt4/mkspecs/qconfig.pri:
/usr/lib64/qt4/mkspecs/features/qt_functions.prf:
/usr/lib64/qt4/mkspecs/features/qt_config.prf:
/usr/lib64/qt4/mkspecs/features/exclusive_builds.prf:
/usr/lib64/qt4/mkspecs/features/default_pre.prf:
/usr/lib64/qt4/mkspecs/features/release.prf:
/usr/lib64/qt4/mkspecs/features/default_post.prf:
/usr/lib64/qt4/mkspecs/features/warn_on.prf:
/usr/lib64/qt4/mkspecs/features/qt.prf:
/usr/lib64/qt4/mkspecs/features/unix/thread.prf:
/usr/lib64/qt4/mkspecs/features/moc.prf:
/usr/lib64/qt4/mkspecs/features/resources.prf:
/usr/lib64/qt4/mkspecs/features/uic.prf:
/usr/lib64/qt4/mkspecs/features/yacc.prf:
/usr/lib64/qt4/mkspecs/features/lex.prf:
/usr/lib64/qt4/mkspecs/features/include_source_dir.prf:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile src.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/src1.0.0 || $(MKDIR) .tmp/src1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/src1.0.0/ && $(COPY_FILE) --parents connectivity.h externs.h filter.h filterButton.h filtersList.h filtersWidget.h inspectionWidget.h mainwindow.h pad.h pipeline.h pipelineParser.h pipelineSaver.h player.h scene.h view.h wire.h .tmp/src1.0.0/ && $(COPY_FILE) --parents connectivity.cpp externs.cpp filter.cpp filterButton.cpp filtersList.cpp filtersWidget.cpp inspectionWidget.cpp.cc main.cpp mainwindow.cpp pad.cpp pipeline.cpp pipelineParser.cpp pipelineSaver.cpp player.cpp scene.cpp view.cpp wire.cpp .tmp/src1.0.0/ && $(COPY_FILE) --parents filtersList.ui filtersWidget.ui inspectionWidget.ui .tmp/src1.0.0/ && (cd `dirname .tmp/src1.0.0` && $(TAR) src1.0.0.tar src1.0.0 && $(COMPRESS) src1.0.0.tar) && $(MOVE) `dirname .tmp/src1.0.0`/src1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/src1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_filtersList.cpp moc_filtersWidget.cpp moc_inspectionWidget.cpp moc_mainwindow.cpp moc_pipeline.cpp moc_player.cpp moc_view.cpp moc_wire.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_filtersList.cpp moc_filtersWidget.cpp moc_inspectionWidget.cpp moc_mainwindow.cpp moc_pipeline.cpp moc_player.cpp moc_view.cpp moc_wire.cpp
moc_filtersList.cpp: ui_filtersList.h \
		filter.h \
		pad.h \
		player.h \
		pipeline.h \
		inspectionWidget.h \
		ui_inspectionWidget.h \
		filtersWidget.h \
		ui_filtersWidget.h \
		externs.h \
		filterButton.h \
		filtersList.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) filtersList.h -o moc_filtersList.cpp

moc_filtersWidget.cpp: ui_filtersWidget.h \
		filter.h \
		pad.h \
		player.h \
		pipeline.h \
		inspectionWidget.h \
		ui_inspectionWidget.h \
		filtersWidget.h \
		externs.h \
		filtersWidget.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) filtersWidget.h -o moc_filtersWidget.cpp

moc_inspectionWidget.cpp: ui_inspectionWidget.h \
		inspectionWidget.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) inspectionWidget.h -o moc_inspectionWidget.cpp

moc_mainwindow.cpp: scene.h \
		filter.h \
		pad.h \
		player.h \
		pipeline.h \
		inspectionWidget.h \
		ui_inspectionWidget.h \
		filtersWidget.h \
		ui_filtersWidget.h \
		externs.h \
		connectivity.h \
		view.h \
		wire.h \
		mainwindow.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) mainwindow.h -o moc_mainwindow.cpp

moc_pipeline.cpp: pipeline.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) pipeline.h -o moc_pipeline.cpp

moc_player.cpp: pipeline.h \
		inspectionWidget.h \
		ui_inspectionWidget.h \
		player.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) player.h -o moc_player.cpp

moc_view.cpp: view.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) view.h -o moc_view.cpp

moc_wire.cpp: wire.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) wire.h -o moc_wire.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_filtersList.h ui_filtersWidget.h ui_inspectionWidget.h
compiler_uic_clean:
	-$(DEL_FILE) ui_filtersList.h ui_filtersWidget.h ui_inspectionWidget.h
ui_filtersList.h: filtersList.ui
	/usr/lib64/qt4/bin/uic filtersList.ui -o ui_filtersList.h

ui_filtersWidget.h: filtersWidget.ui
	/usr/lib64/qt4/bin/uic filtersWidget.ui -o ui_filtersWidget.h

ui_inspectionWidget.h: inspectionWidget.ui
	/usr/lib64/qt4/bin/uic inspectionWidget.ui -o ui_inspectionWidget.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 

####### Compile

connectivity.o: connectivity.cpp connectivity.h \
		externs.h \
		wire.h \
		pad.h \
		filter.h \
		player.h \
		pipeline.h \
		inspectionWidget.h \
		ui_inspectionWidget.h \
		filtersWidget.h \
		ui_filtersWidget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o connectivity.o connectivity.cpp

externs.o: externs.cpp externs.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o externs.o externs.cpp

filter.o: filter.cpp filter.h \
		pad.h \
		player.h \
		pipeline.h \
		inspectionWidget.h \
		ui_inspectionWidget.h \
		filtersWidget.h \
		ui_filtersWidget.h \
		externs.h \
		scene.h \
		connectivity.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o filter.o filter.cpp

filterButton.o: filterButton.cpp filterButton.h \
		scene.h \
		filter.h \
		pad.h \
		player.h \
		pipeline.h \
		inspectionWidget.h \
		ui_inspectionWidget.h \
		filtersWidget.h \
		ui_filtersWidget.h \
		externs.h \
		connectivity.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o filterButton.o filterButton.cpp

filtersList.o: filtersList.cpp filtersList.h \
		ui_filtersList.h \
		filter.h \
		pad.h \
		player.h \
		pipeline.h \
		inspectionWidget.h \
		ui_inspectionWidget.h \
		filtersWidget.h \
		ui_filtersWidget.h \
		externs.h \
		filterButton.h \
		scene.h \
		connectivity.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o filtersList.o filtersList.cpp

filtersWidget.o: filtersWidget.cpp filtersWidget.h \
		ui_filtersWidget.h \
		filter.h \
		pad.h \
		player.h \
		pipeline.h \
		inspectionWidget.h \
		ui_inspectionWidget.h \
		externs.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o filtersWidget.o filtersWidget.cpp

inspectionWidget.cpp.o: inspectionWidget.cpp.cc inspectionWidget.h \
		ui_inspectionWidget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o inspectionWidget.cpp.o inspectionWidget.cpp.cc

main.o: main.cpp player.h \
		pipeline.h \
		inspectionWidget.h \
		ui_inspectionWidget.h \
		mainwindow.h \
		scene.h \
		filter.h \
		pad.h \
		filtersWidget.h \
		ui_filtersWidget.h \
		externs.h \
		connectivity.h \
		view.h \
		wire.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

mainwindow.o: mainwindow.cpp mainwindow.h \
		scene.h \
		filter.h \
		pad.h \
		player.h \
		pipeline.h \
		inspectionWidget.h \
		ui_inspectionWidget.h \
		filtersWidget.h \
		ui_filtersWidget.h \
		externs.h \
		connectivity.h \
		view.h \
		wire.h \
		filtersList.h \
		ui_filtersList.h \
		filterButton.h \
		pipelineParser.h \
		pipelineSaver.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mainwindow.o mainwindow.cpp

pad.o: pad.cpp pad.h \
		filter.h \
		player.h \
		pipeline.h \
		inspectionWidget.h \
		ui_inspectionWidget.h \
		filtersWidget.h \
		ui_filtersWidget.h \
		externs.h \
		connectivity.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o pad.o pad.cpp

pipeline.o: pipeline.cpp pipeline.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o pipeline.o pipeline.cpp

pipelineParser.o: pipelineParser.cpp pipelineParser.h \
		pipeline.h \
		scene.h \
		filter.h \
		pad.h \
		player.h \
		inspectionWidget.h \
		ui_inspectionWidget.h \
		filtersWidget.h \
		ui_filtersWidget.h \
		externs.h \
		connectivity.h \
		wire.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o pipelineParser.o pipelineParser.cpp

pipelineSaver.o: pipelineSaver.cpp pipelineSaver.h \
		pipeline.h \
		scene.h \
		filter.h \
		pad.h \
		player.h \
		inspectionWidget.h \
		ui_inspectionWidget.h \
		filtersWidget.h \
		ui_filtersWidget.h \
		externs.h \
		connectivity.h \
		pipelineParser.h \
		wire.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o pipelineSaver.o pipelineSaver.cpp

player.o: player.cpp player.h \
		pipeline.h \
		inspectionWidget.h \
		ui_inspectionWidget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o player.o player.cpp

scene.o: scene.cpp scene.h \
		filter.h \
		pad.h \
		player.h \
		pipeline.h \
		inspectionWidget.h \
		ui_inspectionWidget.h \
		filtersWidget.h \
		ui_filtersWidget.h \
		externs.h \
		connectivity.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o scene.o scene.cpp

view.o: view.cpp view.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o view.o view.cpp

wire.o: wire.cpp wire.h \
		pad.h \
		filter.h \
		player.h \
		pipeline.h \
		inspectionWidget.h \
		ui_inspectionWidget.h \
		filtersWidget.h \
		ui_filtersWidget.h \
		externs.h \
		connectivity.h \
		scene.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o wire.o wire.cpp

moc_filtersList.o: moc_filtersList.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_filtersList.o moc_filtersList.cpp

moc_filtersWidget.o: moc_filtersWidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_filtersWidget.o moc_filtersWidget.cpp

moc_inspectionWidget.o: moc_inspectionWidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_inspectionWidget.o moc_inspectionWidget.cpp

moc_mainwindow.o: moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mainwindow.o moc_mainwindow.cpp

moc_pipeline.o: moc_pipeline.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_pipeline.o moc_pipeline.cpp

moc_player.o: moc_player.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_player.o moc_player.cpp

moc_view.o: moc_view.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_view.o moc_view.cpp

moc_wire.o: moc_wire.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_wire.o moc_wire.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

